% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slurmSubmit.R
\name{submit}
\alias{submit}
\alias{submit.default}
\alias{submit.Submission}
\title{Submit: Submit an R script to a Slurm cluster}
\usage{
submit(x, ...)

\method{submit}{default}(
  job.name,
  script.file = "",
  cluster = "",
  slurm.args = "",
  script.args = "",
  conda = "",
  singularity = "docker://rocker/r-base:latest",
  r.bin.args = "",
  target.dir = "~",
  r.data = "",
  local.data = "",
  profile = JobProfile(),
  save.profile.name = "",
  VERBOSE = FALSE,
  save.sub = FALSE
)

\method{submit}{Submission}(sub, job.name = "R-slurmSubmit", save.sub = FALSE, VERBOSE = FALSE)
}
\arguments{
\item{x}{A \linkS4class{Submission} class object, or a string containing a name for a new job submission.}

\item{...}{Other arguments}

\item{job.name}{Name of job to be submitted. REQUIRED for default method.}

\item{script.file}{Relative path to the script}

\item{cluster}{Address of cluster you want to submit to.}

\item{slurm.args}{String containing all \code{sbatch} arguments for your submission. Takes precedence over values in the
\linkS4class{JobProfile}  passed to the \code{profile} argument.}

\item{script.args}{String containing all arguments to the submitted Rscript to be executed remotely on the cluster.}

\item{conda}{String containing the name of a valid conda environment on the cluster to be used to execute R.}

\item{singularity}{String path or URI of a Singularity container to execute Rscript inside of.}

\item{r.bin.args}{String containing all arguments to pass to the \code{RScript} binary.}

\item{target.dir}{Path to directory to create .slurmsubmit/ directory.}

\item{r.data}{A character vector containing the name(s) of valid R data objects in the search path. This data will be made
available locally on the cluster in the same directory as the script under the file handle \code{Rdata}.}

\item{local.data}{String containing a list of paths to one or more local file(s). WARNING: Large files may take a long time to sync.}

\item{profile}{A \linkS4class{JobProfile} type object.}

\item{save.profile.name}{If specified, will save the generated profile object under the specified name in .Globalenv.}

\item{VERBOSE}{Show more details.}

\item{save.sub}{If TRUE will save this job submission as a \linkS4class{Submission} type object under \code{job.name}.}

\item{sub}{A Submission type object}
}
\description{
This generic function is used to submit a Rscript job to a Slurm cluster. Current support is for Singularity and Conda environments.
}
\details{
It is suggested that you use clean.remote() after your job has completed to clean the remote
address of the .slurmSubmit/ hidden directory.
}
\examples{
# Naive method
submit("example", cluster="login.sumner.jax.org", slurm.args="-q batch")

# Without any job profile specified, the default JobProfile object will be used.

# The preferred method is to define a Submission type object to pass to submit()

exampleProfile = JobProfile(cpus=2, memory="4G", qos="batch",email.complete="matt.bradley@jax.org")
exampleSub = Submission(script.file="example.R", cluster="login.sumner.jax.org", profile=exampleProfile)

submit(exampleSub, job.name="example")

#This will save a Submission type object named "example" after completing successfully.

# Alternatively, submit.default will create a new Submission object using passed parameters. It is important
# to note that job.name is required to trigger the default method. In this example we will also define
# sbatch arguments using the slurm.args argument. Since save.sub=TRUE, this will create a new Submission
# type object in .GlobalEnv named "example".

submit("example", script.file="example.R", cluster="login.sumner.jax.org",
       slurm.args="-c 2 --mem=4G, -q batch --mail-type=END --mail-user=matt.bradley@jax.org",
       save.sub=TRUE)

}
\seealso{
\linkS4class{Submission}, \linkS4class{JobProfile}, \link{clean.remote}
}
